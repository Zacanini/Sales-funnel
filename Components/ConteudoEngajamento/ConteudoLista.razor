@namespace Sales_funnel.Components.ConteudoEngajamento
@using Sales_funnel.Components.UI

<div>
    <div class="text-center mb-12">
        
        <h2 class="text-3xl md:text-4xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600">Conteúdos essenciais sobre PWA</h2>
        <p class="text-lg text-gray-700 max-w-2xl mx-auto leading-relaxed">
            Selecione os tópicos que mais interessam a você e comece a desenvolver PWAs profissionais hoje mesmo
        </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        @foreach (var item in ListaConteudos)
        {
            <div class="group bg-white rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-gray-100">
                <div class="p-6">
                    <div class="flex items-start gap-5">
                        <div class="flex-shrink-0">
                            <div class="w-16 h-16 rounded-lg bg-gradient-to-br @item.GradientClasses text-white flex items-center justify-center shadow-md group-hover:shadow-lg transition-all">
                                <div class="w-8 h-8">
                                    @((MarkupString)item.Icon)
                                </div>
                            </div>
                        </div>
                        <div class="flex-grow">
                            <div class="flex flex-wrap items-center gap-2 mb-2">
                                <h3 class="font-bold text-xl text-gray-800 @item.TitleHoverClass transition-colors">@item.Titulo</h3>
                                
                                @if (item.IsNovo)
                                {
                                    <div class="bg-red-100 text-red-600 text-xs font-bold px-2.5 py-1 rounded-full flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z" clip-rule="evenodd" />
                                        </svg>
                                        NOVO
                                    </div>
                                }
                                
                                @if (item.IsPopular)
                                {
                                    <div class="bg-amber-100 text-amber-600 text-xs font-bold px-2.5 py-1 rounded-full flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                        </svg>
                                        POPULAR
                                    </div>
                                }
                            </div>
                            
                            <p class="text-gray-600 mb-4">@item.Descricao</p>
                            
                            <div class="flex flex-wrap justify-between items-center gap-3 pt-4 border-t border-gray-100">
                                <div class="flex items-center">
                                    <div class="flex items-center text-gray-500 rounded-full bg-gray-50 px-3 py-1.5">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5 @item.IconColorClass" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                                        </svg>
                                        <span class="font-medium">@item.Duracao min</span>
                                    </div>
                                    <span class="mx-3 text-gray-300">•</span>
                                    <div class="@item.TextColorClass text-sm font-medium flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                        </svg>
                                        <span>@item.Nivel</span>
                                    </div>
                                </div>
                                
                                <Button 
                                    Variant="primary" 
                                    Size="sm" 
                                    OnClick="@(() => AcessarConteudo(item))" 
                                    Class="@item.ButtonClasses"
                                >
                                    <span class="flex items-center">
                                        Acessar
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1.5" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                                        </svg>
                                    </span>
                                </Button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<ConteudoItem> OnItemClick { get; set; }
    
    private async Task AcessarConteudo(ConteudoItem item)
    {
        await OnItemClick.InvokeAsync(item);
    }
    
    private List<ConteudoItem> ListaConteudos = new List<ConteudoItem>
    {
        new ConteudoItem
        {
            Titulo = "Configurando Service Workers",
            Descricao = "Aprenda a configurar service workers para fazer sua PWA funcionar offline e melhorar o desempenho. Guia completo com exemplos práticos.",
            Icon = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='12' cy='12' r='3'></circle><path d='M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z'></path></svg>",
            BgColorFrom = "blue",
            BgColorTo = "indigo",
            GradientClasses = "from-blue-500 to-indigo-600",
            IconColorClass = "text-blue-500",
            TextColorClass = "text-blue-500",
            TitleHoverClass = "group-hover:text-blue-600",
            ButtonClasses = "bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-sm",
            Duracao = 15,
            Nivel = "Intermediário",
            IsNovo = true,
            IsPopular = false
        },
        new ConteudoItem
        {
            Titulo = "Estratégias de Cache",
            Descricao = "Conheça as principais estratégias de cache para otimizar o desempenho das suas PWAs em diferentes cenários e tipos de conexão.",
            Icon = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='2' y='7' width='20' height='14' rx='2' ry='2'></rect><path d='M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16'></path></svg>",
            BgColorFrom = "purple",
            BgColorTo = "pink",
            GradientClasses = "from-purple-500 to-pink-600",
            IconColorClass = "text-purple-500",
            TextColorClass = "text-purple-500",
            TitleHoverClass = "group-hover:text-purple-600",
            ButtonClasses = "bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 shadow-sm",
            Duracao = 12,
            Nivel = "Avançado",
            IsNovo = false,
            IsPopular = true
        },
        new ConteudoItem
        {
            Titulo = "Web App Manifest",
            Descricao = "Saiba como configurar o arquivo manifest.json para permitir que usuários instalem sua aplicação em dispositivos móveis e desktops.",
            Icon = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z'></path><polyline points='3.27 6.96 12 12.01 20.73 6.96'></polyline><line x1='12' y1='22.08' x2='12' y2='12'></line></svg>",
            BgColorFrom = "green",
            BgColorTo = "teal",
            GradientClasses = "from-green-500 to-teal-600",
            IconColorClass = "text-green-500",
            TextColorClass = "text-green-500",
            TitleHoverClass = "group-hover:text-green-600",
            ButtonClasses = "bg-gradient-to-r from-green-500 to-teal-600 hover:from-green-600 hover:to-teal-700 shadow-sm",
            Duracao = 10,
            Nivel = "Iniciante",
            IsNovo = false,
            IsPopular = false
        },
        new ConteudoItem
        {
            Titulo = "Notificações Push",
            Descricao = "Implemente notificações push em suas PWAs para reengajar usuários e proporcionar uma experiência mais interativa e personalizada.",
            Icon = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9'></path><path d='M13.73 21a2 2 0 0 1-3.46 0'></path></svg>",
            BgColorFrom = "amber",
            BgColorTo = "orange",
            GradientClasses = "from-amber-500 to-orange-600",
            IconColorClass = "text-amber-500",
            TextColorClass = "text-amber-500",
            TitleHoverClass = "group-hover:text-amber-600",
            ButtonClasses = "bg-gradient-to-r from-amber-500 to-orange-600 hover:from-amber-600 hover:to-orange-700 shadow-sm",
            Duracao = 18,
            Nivel = "Avançado",
            IsNovo = true,
            IsPopular = true
        }
    };

    public class ConteudoItem
    {
        public string Titulo { get; set; } = "";
        public string Descricao { get; set; } = "";
        public string Icon { get; set; } = "";
        public string BgColorFrom { get; set; } = "blue";
        public string BgColorTo { get; set; } = "indigo";
        public string GradientClasses { get; set; } = "from-blue-500 to-indigo-600";
        public string IconColorClass { get; set; } = "text-blue-500";
        public string TextColorClass { get; set; } = "text-blue-500";
        public string TitleHoverClass { get; set; } = "group-hover:text-blue-600";
        public string ButtonClasses { get; set; } = "bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-sm";
        public int Duracao { get; set; } = 10;
        public string Nivel { get; set; } = "Iniciante";
        public bool IsNovo { get; set; } = false;
        public bool IsPopular { get; set; } = false;
    }
}